<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnLeftMove.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAATMAAAE4CAYAAAA3nxSdAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAEW5JREFUeF7tnU2u5dQVhasLAqkaNACBIugUSAEkQAKmUMoEMgEmUHNgDDWBTCBz
        qAnQqOm8eKE45Zzy9T329c/ae3+ftHQ74b1r+5zPe9kv8AwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnj37
        bcjLMT///PPLn3766dWPP/74dsjTl19++fT8+fOnjz766OmDDz5YHf1z+uf1c/Tz9HP18/V7pr93iL4H
        AMBN/j5EopjLP4f8a8ibJn8OeTow+vnt79T30PeZ+56KjgMACjGV1y1ZjTlaWmszJ7kxreyQG0ACbk1b
        rbzcZPVoprJbmuQQHYAxo8CWpq1s8rqXW5PcVHSIDcCAOYFVE9bWjKJDbAAXgcD2D2IDOAkEdl4QG8DO
        ILDrg9gANoLAfIPYAO6AwOIFsQFM0OJHYPHTig2pQRmmEkNguaLridQgPUisTpAapASJ1Q1SgxQgMTIG
        qUFIkBi5FaQGIUBipDdIDSxBYmRrRqn9YwjAZSAxslf+PURriT++hdPRnRSJkT2jtTT+8S2TGhzOOI3p
        Tjq3IAnZI1pfCA0Og2mMnJmxelI7YTeYxshVGV8QIDV4iFFiTGPk6oxSo3rCaqiUxDFUT1iFREalJK5h
        SoO78GyMRApTGrwHz8ZI1DClwf/g2RjJEE1pCK0wPBsjmULtLAoiIxlD7SwGIiPZQ+0sACIjVYLQksKf
        XZCKQWjJ0MXkjSWpGoSWBGrlMdGNQf/uraPCjWffaA/wpjMwiGyftOLSlKuNoX8r6lEZ/4h5+nsR3GPR
        +eNNZ0AQ2frMTVtz4jrr7q7fM/29c4JTkNy6UDsDgcj6MpXXrWnLrZa0glNaySG3+0FoAUBkyxkF1sor
        +rOUqeSmckNst4PQjEFk7+fW9BVdXvcY5cbUthyEZggie5es09dWmNqWg9CMQGTzAqsqr3vMTW3VxYbQ
        DKgsMgT2OK3YKksNoV1IVZFpwyGw/dF5rD6tIbQLqCiyqcQQ2HFUn9YQ2olUExkSu47ptFZJagjtBCqJ
        DIn5UFFqCO1AqogMiflSTWoI7QAqiAyJxaGS1HSMrMedqCAyHR8Si8cotczrU7LWMcKDZBfZOI0xysdG
        1y/zlKY9yBp9gOwiYxrLRfYpDaFtRAtDd7q5kxo9TGO5yTylIbQN6A6XdTEwjeUn85QmUbN+O8lYL5nG
        apJxStOxSNRwh4wiYxqrTcYpTcfCjXmBrCLjooPItr5Z2zfQ3Uvj+NxJixhqJcyh9ZCpdiK0GTSGZ7rA
        1Eq4RbbaKTmz1v9LpqmMOxX0onWSQWi8EJiQZSpDZLCWLEJj7Q9kuJg8H4NH0LrJ8BytdN3MUC8lYp6P
        waNo/UR/jla6bkavl4zWsDfRm0rJPcFFA5iHvRGI6PUSkcHRRBdamednkeslIoOziCy0Es/PIl8gRAZn
        E3m/pJ7OItdLRAZXEVVoqaezqPUSkcHVRBVayuks6sVAZOBCxD2UbjqLWi8RGbgRUWip9lHEeonIwJWI
        QktRNyNOZYgM3Ik2IKSom9FOOiKDCEQcEkJPZ9FOeLqHlZCaaHUz9P6KNpWl6PVQimhCC7nHok1l1EuI
        SiShhZzOIk1liAyiE2m/hZrOIt0pEBlkIFITCjOdcVIBriHSEBFiOvttyJshcwfgllDjLkAHUYQWYpCI
        0t2pl5CVKHvQepiIUjERGWQmyj60ns4i3BFCjLcADxKlblpOZ1HuBtajLcCOMFxshBMH4AUDxgY4aQCe
        RKibVkMGUxmALxH2p8WgwVQG4E2EPaq/TdXfqF5KhD+S5U8xoDruddOiObmPsNTLa9FUwETsgftevbQ9
        RRhfqZfXoWlA5//1EK7B9bjv10urJlMZ3GJaayyeh8BfOO/Zy/YrUxnMofOtBTl9PoPMfHDft5fsWfcH
        /0xl5zPWyvbOj8y8YDprcD4hClPZuSy9LUNmXjCdTXA/GUxl56G1oHO99NofmfnhPIycul7cKyZT2Tnc
        qpVtkJkfzgPJqcOIs9WZys5hqVa2QWaeOO/jUwYS94rJVHYsOrfaBL0iU5CZJ84N65Q143wCmMqOpbdW
        tkFmnpSvmuVH06KsqZVtkJkvZfdzeZMXZEutbIPMfHHe04euG+eKyVS2P1trZRtk5o3rdHbogFLyoIvy
        SK1sg8y8KTeklB1Hi7FHrWzD9fGm3N52tjebZR/2qpVtuD7+lGpdzjI7ZBQtxp61sg0y86fU/uZ5WU6O
        qJVtkJk/Zaqm84EylW3nqFrZBpnFwHVg2XX9uI6gTGXbObJWtkFmMXAdWkrIjE2ynjNqZRuuUxwcp7Nd
        h5YS42cBzqqVbbhOcXAdXHZ5nMTzshycWSvbILM4uMpslzXkenA8L+vjilrZBpnFwXV4SS0zNsh9rqqV
        bbhWsXB8rLTLGnJ9XkbFXObKWtkGmcXCcYB5uIm5jpxUzNs41Mo2yCwWjjJTHhpgXA+KzTGPS61sw/WK
        RcrnZsgsDk61sg3XKx7pnpu5yoznZe9wrJVtkFk8HPd+OpnxvOwdrrWyDTKLR7q9n87OiXCulW24ZvFw
        fW62uZWl680JiFAr2yCzmKTZ/65mrrwxotTKNsgsJrpmunZz1/SqbFpLjgeiVN0YkWplG2QWE2R2cDZ3
        5qBErJVtNEn+PkRriizHaW3r+yCzg/LQ24yARK2Vc9ExaD2R5bwe4iI0ZHZgNh1IUCLXSrI9Tms8jQN4
        k3kNGWol2R6nNa616PYScPX50f+YN5nnk6lWkm1xW+NuQ83q8/NyiP6huR92ZTLLjFpJFLc1ru/i5II0
        Msv4JpNaSaZBZstJITONutneZFIrSRtktpzVHnCUmdtFfhRqJZkLMrsfDQDd5wiZHQe1kiwFmd2Pvo8c
        1QUyOwZqJbkXt3Xu+ucZyOxCqJWkJ47r3PHPM5DZBVAryZo4rnN9HycfILMLoFaStUFm9/Pmu+++Q2Yn
        Qq0kW4LM7ufPH3744dXw2QUy2w61kjwSZNaR77///u3w2QUy2wa1kjwaZNaRQWb67AKZrYdaSfYIMuvI
        119/rc8ukNk6EBnZK8isI5999pk+u0Bm/fxtyB9D5r4zIWuDzDry/PlzfXaBzNbBZEb2CjLryIcffqjP
        LpDZehAa2SPIrCMff/yxPrtAZtvgbSZ5NMisI9TMc+DvzMgjQWYd+eSTT/TZBTJ7HGon2RJk1pFPP/1U
        n10gs32gdpK1QWYd+eKLL/TZBTLbD2onWRNk1pGvvvpKn10gs/2hdpKeILOOfPPNN/rsApkdA7WT3Asy
        68i3337L/9HcAGonWYrjOtd6dboB/zlMZt3/CiCdTE0Qcz/oquhk6qRmgdpJ5uImM9183VzwZpjMNHB1
        42ZjRSdVJzcL1E7Sxk1m+i6OLW2VzFwPwulC7wG1k0yDzO4HmZlD7SQKMrsfZBYAaidBZveDzIJA7awd
        tzXu+Ow8hcyyvdFcgtpZM04yc3yTqayWmeuBZHujuUSm2qlj0CIky3k9xGV9Ow40ivbEauG7jphOY/jR
        ZKidWkO/D9F1I8txulHr+7jJbHM7czyYajIbiVw7q16z6KTa/8jMi6i1E5nFBJkdnOobI2LtRGYxQWYH
        Z3NnTkak2onMYpLqmbmjzJRKbzSXiFI7kVk8tL+0tuau55VJJzM2xzsi1E6uVzzS7f10dk6Mc+3kesXD
        VWYPtTLH3sxzs3lcaycyi0fKfZ/S0IlxrJ3ILBZpG5mrzNggyzjVTq5VLNLueWQWF5faybWKhWPFVB5u
        Y64j58P9uQgOtROZxSH9fk9r6kJcWTuRWRzSN7H0B1iEq2on1ykOyOyiUDXXc0XtRGZxcG1hu60h1x6t
        UDW3cWbtRGYxKLPP0xu7IGfVTq5RDHSNdK3mruGV2b2BlTnQYpxRO5FZDMoMLK4yU6iaj3Nk7URm/jhX
        zN3XT6mDLcpRtZPr40+5YcV1DKVq7scRtROZ+VNub5ezd2H2rJ3IzJuSrYuqWYu9aifXxhvXqUw5dEgp
        N44WZ4/aicx8cR5QDt/TWpRanHO//OocavHiPFI7kZkvzvv58HXjfPBMZ8eytXYiM19cm5Zy+HDiPJYq
        TGfHonO7tnYiM0+c9/Jpg4mzzZnOzmFN7URmnjjv49PWDNMZiN7aicz8YA9PYDoDoQWnc700pSEzP9i/
        E7Q4tUjnvoxDmM7OZal2IjMv3Key09eL+wlhOjufW7UTmXnhPJUplwwinBRo0fnWuphOacjMB4aQG7hX
        Taaz65jWTmTmAwPIDdwtrzCdXcdYO18P4RpcD1PZHdxNz3R2LdpAiMwD9716+QTvXjUV1R1NCQBVWXrb
        7JLLW5T76DqGuglVibBHbRqU+/iqUDehKhH2p82wwXQG4EmEemk3aDCdAXgRZciw+9OdKCeOlwFQhQgD
        hmLZmDh5AB5EqJeKbVuKMp1RNyEzUfahYj1YRJnOqJuQlSh70H6oiHRXQGiQjSj1UgnxuCfKnUEJcUIB
        OogksjCPeiJNZ2FOKsACkfacEmqIiDSdUTchOpH2W7gBItqdAqFBVCLVSyXko51Idwsl5EmG0kQTWdjH
        OtGms7AnGkoSTWRK6IEh2nRG3YQIRBsUlPB7i5MOsD/RhoQ0rSfaiVcQGrhCvbyQiNOZgtDAjYgiS/cs
        OuJFUBAauBB1D6WZyqZErJsKQoOriSqydFPZSNS6qSA0uIqoIlNSTmUjkS8MQoOzYb+YE7VuKggNziKy
        yNLWy5bIdVNBaHA0kUWmpK6XLZGnMwWhwVFEF1m5vRF9OlMQGuxNdJGVqZct0S+cou+vi1dmpIZD0PrR
        Ooq+H0rVy5YMQtPdSBeRKQ22oHWj9RP5sYuifVx+D0R/fjaGiwlryXAzV8rWy5YMz8/GIDToJYvIlNL1
        siXLdKZogfIcDW6R5fnYGG7gDZmmM4XnaDCH1kOG52NjENkNMo3dY7jYMJJtffOc7A5ZhUbtrEu2WjmG
        52QdZBQatbMmut6ZauUY7U/Wcie6k2VbAApTWg2yTmMKIluJFoPuaHMnM3qY0nKTdRpTENlGdNIy3tnG
        MKXlIvM0piCyB8kuNKa0HOj6ZZ3GFES2E9mFpuj4mNLikX0aUyRoHSPsRAWhjVMaUvNnlFjmaWyMjpH1
        uDMVhKYgNV8qSUzRfqNeHkQVoSlIzYdqElMQ2QlUEpqC1K6josQURHYi1YSmILVz0Ln9bUhFiSmI7AIq
        Ck2ZSk2bDrHtw3QKezOkmsQURHYhVYWmaLNp0yG27VSfwqZBZAZUFtoYxNZPK7CqU9g0iMwIhPYuiO3/
        GeWFwOaDyAxBaO9nTmzZ5XZLXgjs/SAyYxDa7Yxiyyi3UWDIqz+ILAAIrS9LcnOV3HTqGjMVGPLqCyIL
        BEJbn6ncliR3luBacbVT1xgEti6ILCAIbZ+0krs1xe2ZOXEhrcei86dzisiCgtCOydwUt2cQ177RHtAN
        wu2xAaxEQtMdiQ1CKoZamQzdkXRnYkojlYLIEkPtJFWCyAqA0Ej2ILJCIDSSMbyxLApCI5mitcwby8JI
        aLzpJNFDrYS/4E0niRpqJcxC7SSRQq2ERaidxD1MY9ANtZO4hmkMNsGURlzCNAYPM05pSI1ckVFiTGOw
        G0iNnB0qJRzKKDWep5GjQqWEU+F5Gtk7VEq4DKon2StUSrAAqZGtoVKCJUiN9IZKCSEYpcZLAtIGiUFI
        xpcE/Ac6CBKD8GjhTv/TaUitVpAYpGSsn0gtf5AYlACp5Q0Sg5JMpcZztZjRNRv/w8VIDMqjxT99robY
        /DOdwHTtFCQGMAGxeYYJDOABENv1YQID2BnEdk6YwABOBLHtHyYwgItBbNvCBAZgzJzYpqkquam4FCYw
        gECMYpumlVxGud0Tl4K8ABIwldytCW4uLuJrZTUN4gIojDb8y468GvJ2yJxgDsvnn3/+9OLFi6dff/1V
        efvLL7+8GjL3/RQdCwAAAAAAAAAAAAAAAAAAAAAA7MmzZ/8BDlJ0w/CN+aMAAAAASUVORK5CYII=
</value>
  </data>
</root>